name: App Gateway for Containers
on:
  workflow_dispatch:

env:
  ACR_RG: poc-rg
  ACR: vhacr
  AKS_RG: aks-rg
  AKS_NAME: aks
  CONTAINER_TAG: ${{ github.sha }}
  CONTAINER_NAME: ag4claims
  DEPLOY_NS: ag4claims-ns
  USERNAME: 'Nadeem Khalid'

jobs:
  
  # build job
  build-push-deploy:

    permissions:
      contents: read
      packages: read
      id-token: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        id: checkout
        uses: actions/checkout@v4

        # Login to Azure using github-actions app registration
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: build and push image to ACR
        id: build
        run: |
          az acr build \
          --image ${{ env.ACR }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.CONTAINER_TAG }} \
          --registry ${{ env.ACR }} \
          -g ${{ env.ACR_RG }} \
          -f ./dockerfiles/Dockerfile.prod .

 
      # setup kubectl
      - name: setup kubectl
        uses: azure/use-kubelogin@v1.2
        with:
          kubelogin-version: 'v0.0.24' # Default version of kubelogin is latest
          skip-cache: true
        

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.AKS_RG }}
          cluster-name: ${{ env.AKS_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          resource-group: ${{ env.AKS_RG }}
          namespace: ${{ env.DEPLOY_NS }}
          action: deploy
          strategy: basic  # basic | canary | blue-green
          manifests: |
            manifests/deployment.yaml
            manifests/service.yaml
          # FQDN of the image to be deployed
          images: |
            ${{ env.ACR }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.CONTAINER_TAG }}
        # modify the manifest file to point to the image

      # get list of all pods
      - name: get pods
        run: |
            kubectl get pods -A

      