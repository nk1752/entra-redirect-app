# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and deploy using Helm

on:
  workflow_dispatch:

env:
  ACR_RG: poc-rg
  ACR: vhacr

  AKS_RG: aks-rg
  AKS_NAME: aks
  CONTAINER_NAME: claims
  CONTAINER_TAG: ${{ github.sha }}
  DEPLOY_NS: helm-ns # set this to the name of your AKS cluster

  # If you bake using helm:
  CHART_PATH: claims-chart # set this to the path to your helm file
  CHART_OVERRIDE_PATH: claims-chart/values-dev.yaml # set this to an array of override file paths


jobs:
  build-image:

    permissions:
      contents: read
      id-token: write
      actions: read
    
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        id: checkout_repo
        uses: actions/checkout@v4

      - name: Azure Login
        id: login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: build and push image to ACR
        id: build
        run: |
          az acr build \
            --image ${{ env.ACR }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.CONTAINER_TAG }} \
            --registry ${{ env.ACR }} \
            -g ${{ env.ACR_RG }} \
            -f ./dockerfiles/Dockerfile.prod .

  deploy:
    needs: build-image
    
    permissions:
      contents: read
      id-token: write
      actions: read

    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        id: checkout_repo
        uses: actions/checkout@v4

      - name: Azure Login
        id: login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # setup kubectl
      - name: setup kubectl
        uses: azure/use-kubelogin@76597ae0fcbaace21b05e13a2cbf8daee2c6e820  # v1.2
        with:
          kubelogin-version: 'v0.0.24' # Default version of kubelogin is latest
          skip-cache: true

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.AKS_RG }}
          cluster-name: ${{ env.AKS_NAME }}
          admin: 'false'
          use-kubelogin: 'true'
          
      # Runs Helm to create manifest files
      - name: Configure deployment
        id: bake
        uses: azure/k8s-bake@v3
        with:
          renderEngine: 'helm'
          helmChart: ${{ env.CHART_PATH }}
          
          overrides: |
            replicas: 1
          helm-version: 'latest'

      # Deploys application based on manifest files from previous step
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          resource-group: ${{ env.AKS_RG }}
          namespace: ${{ env.DEPLOY_NS }}
          action: deploy
          strategy: basic
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: |
            ${{ env.ACR }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.CONTAINER_TAG }}

      
